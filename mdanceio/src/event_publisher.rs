use crate::error::{MdanceioError};

pub trait EventPublisher {
    fn publish_tracking_event(&mut self, screen: String, action: String, category: String, label: String);
    fn publish_undo_evnet(&mut self, can_undo: bool, can_redo: bool);
    fn publish_redo_event(&mut self, can_redo: bool, can_undo: bool);
    // TODO
    fn publish_push_undo_command_event(&mut self, );
    fn publish_add_model_event(&mut self, );
    fn publish_set_active_model_event(&mut self, );
    fn publish_set_active_bone_event(&mut self, );
    fn publish_set_active_morph_event(&mut self, );
    fn publish_remove_model_event(&mut self, );
    fn publish_add_accessory_event(&mut self, );
    fn publish_set_active_accessory_event(&mut self, );
    fn publish_remove_accessory_event(&mut self, );
    fn publish_add_motion_event(&mut self, );
    fn publish_remove_motion_event(&mut self, );
    fn publish_play_event(&mut self, );
    fn publish_pause_event(&mut self, );
    fn publish_resume_event(&mut self, );
    fn publish_stop_event(&mut self, );
    fn publish_seek_event(&mut self, );
    fn publish_update_duration_event(&mut self, );
    fn publish_toggle_project_effect_enabled_event(&mut self, value: bool);
    fn publish_toggle_project_ground_shadow_enabled_event(&mut self, value: bool);
    fn publish_toggle_project_vertex_shader_skinning_enabled_event(&mut self, value: bool);
    fn publish_toggle_project_compute_shader_skinning_enabled_event(&mut self, value: bool);
    fn publish_set_project_sample_level_event(&mut self, value: u32);
    fn publish_toggle_grid_enabled_event(&mut self, value: bool);
    fn publish_set_grid_cell_event(&mut self, );
    fn publish_set_grid_size_event(&mut self, );
    fn publish_set_preferred_motion_fps_event(&mut self, value: u32, unlimited: bool);
    fn publish_set_preferred_editing_fps_event(&mut self, value: u32);
    fn publish_set_physics_simulation_mode_event(&mut self, value: u32);
    fn publish_set_physics_simulation_engine_debug_flag_event(&mut self, value: u32);
    fn publish_toggle_shadow_map_enabled_event(&mut self, value: bool);
    fn publish_set_shadow_map_mode_event(&mut self, value: u32);
    fn publish_set_shadow_map_distance_event(&mut self, value: u32);
    fn publish_toggle_active_model_add_blend_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_model_shadow_map_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_model_visible_event(&mut self, value: bool);
    fn publish_toggle_active_model_compute_shader_skinning_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_model_show_all_bones_event(&mut self, value: bool);
    fn publish_toggle_active_model_show_all_rigid_bodies_event(&mut self, value: bool);
    fn publish_toggle_active_model_show_all_vertex_faces_event(&mut self, value: bool);
    fn publish_toggle_active_model_show_all_vertex_points_event(&mut self, value: bool);
    fn publish_toggle_active_model_vertex_shader_skinning_enabled_event(&mut self, value: bool);
    fn publish_toggle_project_playing_with_loop_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_accessory_add_blend_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_accessory_ground_shadow_enabled_event(&mut self, value: bool);
    fn publish_toggle_active_accessory_visible_event(&mut self, value: bool);
    fn publish_toggle_model_editing_enabled_event(&mut self, value: bool);
    fn publish_consume_pass_event(&mut self, value: u32);
    fn publish_add_model_dialog_event(&mut self, );
    fn publish_clear_model_dialog_event(&mut self, );
    fn publish_set_language_event(&mut self, value: u32);
    fn publish_query_open_single_file_dialog_event(&mut self, );
    fn publish_query_open_multiple_files_dialog_event(&mut self, );
    fn publish_query_save_file_dialog_event(&mut self, );
    fn publish_update_progress_event(&mut self, value: u32, total: u32, typ: u32, text: String);
    fn publish_start_progress_event(&mut self, title: String, text: String, total: u32);
    fn publish_stop_progress_event(&mut self, );
    fn publish_setup_progress_event(&mut self, );
    fn publish_set_editing_mode_event(&mut self, );
    fn publish_complete_exporting_image_configuration_event(&mut self, );
    fn publish_complete_exporting_video_configuration_event(&mut self, );
    fn publish_can_copy_event(&mut self, value: bool);
    fn publish_can_paste_event(&mut self, value: bool);
    fn publish_set_window_device_pixel_ratio_event(&mut self, value: u32);
    fn publish_set_viewport_device_pixel_ration_event(&mut self, value: u32);
    fn publish_disable_cursor_event(&mut self, );
    fn publish_enable_cursor_event(&mut self, );
    fn publish_quit_application_event(&mut self, );
    fn publish_error_event(&mut self, error: MdanceioError);
}