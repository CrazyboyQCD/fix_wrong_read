name: CI

on:
  push:
    branches: [ "master" ]
    tags: [v0.*]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build-wasm:
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: --cfg=web_sys_unstable_apis

    steps:
    - uses: actions/checkout@v3

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
    - name: caching
      uses: Swatinem/rust-cache@v1
      with:
        key: wasm-pack-b

    - name: Build
      run: wasm-pack build mdanceio --out-dir ../target/pkg

    - name: Build with WebGL support
      run: wasm-pack build mdanceio --out-dir ../target/pkg-webgl --scope webgl-supports -- --features webgl
    
    - uses: actions/upload-artifact@v3
      with:
        name: npm-package
        path: target/pkg/
    
    - uses: actions/upload-artifact@v3
      with:
        name: npm-package-webgl
        path: target/pkg-webgl/
  
  build-example:
    strategy: 
      fail-fast: false
      matrix: 
        include:
          # Windows
          - name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin-name: winit_app.exe
            artifact-name: winit_app_windows_x86_64
          # Linux
          - name: Linux x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin-name: winit_app
            artifact-name: winit_app_ubuntu_x86_64
          # MacOS
          - name: MacOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin-name: winit_app
            artifact-name: winit_app_macos_x86_64
          # MacOS arm64
          - name: MacOS aarch64
            os: macos-latest
            target: aarch64-app-darwin
            bin-name: winit_app
            artifact-name: winit_app_macos_arm64
    
    name: Build Winit Demo ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      
    - name: caching
      uses: Swatinem/rust-cache@v1
      with:
        key: ${{ matrix.target }}-b

    - name: Build Example
      run: cargo build --package mdanceio --example winit_app --release
    
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact-name }}
        path: target/release/examples/${{ matrix.bin-name }}

  build-web-demo:

    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: --cfg=web_sys_unstable_apis

    steps:
    - uses: actions/checkout@v3

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
    - name: caching
      uses: Swatinem/rust-cache@v1
      with:
        key: wasm-pack-web-demo-b

    - name: Build Wasm Pack
      run: wasm-pack build mdanceio --out-dir ../target/pkg

    - name: Build Wasm Pack with WebGL support
      run: wasm-pack build mdanceio --out-dir ../target/pkg-webgl --scope webgl-supports -- --features webgl

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
        cache-dependency-path: mdance-demo/package-lock.json

    - name: Install Dependencies
      working-directory: ./mdance-demo
      run: npm install

    - name: Build
      working-directory: ./mdance-demo
      run: npm run build
    
    - uses: actions/upload-artifact@v3
      with:
        name: mdanceio-web-demo
        path: mdance-demo/build/
